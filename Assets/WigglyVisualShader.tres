[gd_resource type="VisualShader" load_steps=27 format=2]

[ext_resource path="res://Assets/new_noisetexture.tres" type="Texture" id=1]
[ext_resource path="res://Assets/EnergyLUT.png" type="Texture" id=2]
[ext_resource path="res://Assets/BoardBack.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeVectorCompose" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.5, -0.5, -0.5 ) ]

[sub_resource type="VisualShaderNodeVectorCompose" id=4]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=5]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "WaveNumber"

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Intensity"

[sub_resource type="VisualShaderNodeColorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarConstant" id=13]
constant = -0.5

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=16]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=17]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.31, 0.14, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=19]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=20]

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0.2, 0.1, 0 ), 1, Vector3( 0.05, 0.05, 0.05 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "time"

[resource]
code = "shader_type canvas_item;
uniform float WaveNumber;
uniform sampler2D tex_frg_2;uniform sampler2D tex_frg_32;uniform float Intensity;
uniform sampler2D tex_frg_6;uniform float Color;
uniform sampler2D tex_frg_26;


void vertex() {
// Output:0

}

void fragment() {
// Scalar:27
	float n_out27p0;
	n_out27p0 = -0.500000;

// Input:9
	float n_out9p0;
	n_out9p0 = TIME;

// ScalarOp:17
	float n_in17p1 = 10.00000;
	float n_out17p0;
	n_out17p0 = n_out9p0 / n_in17p1;

// VectorCompose:10
	float n_in10p0 = 0.00000;
	float n_in10p2 = 0.00000;
	vec3 n_out10p0;
	n_out10p0 = vec3( n_in10p0 , n_out17p0 , n_in10p2 );

// ScalarUniform:19
	float n_out19p0;
	n_out19p0 = WaveNumber;

// VectorCompose:14
	float n_in14p0 = 1.00000;
	float n_in14p2 = 1.00000;
	vec3 n_out14p0;
	n_out14p0 = vec3( n_in14p0 , n_out19p0 , n_in14p2 );

// Input:4
	vec3 n_out4p0;
	n_out4p0 = vec3(UV,0.0);

// VectorOp:15
	vec3 n_out15p0;
	n_out15p0 = n_out14p0 * n_out4p0;

// VectorOp:11
	vec3 n_out11p0;
	n_out11p0 = n_out10p0 + n_out15p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out11p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// VectorOp:34
	vec3 n_in34p1 = vec3(0.31000,0.14000,0.00000);
	vec3 n_out34p0;
	n_out34p0 = n_out11p0 + n_in34p1;

// Texture:32
	vec3 n_out32p0;
	float n_out32p1;
	vec4 tex_frg_32_read = texture( tex_frg_32 , n_out34p0.xy );
	n_out32p0 = tex_frg_32_read.rgb;
	n_out32p1 = tex_frg_32_read.a;

// VectorCompose:33
	float n_in33p2 = 0.00000;
	vec3 n_out33p0;
	n_out33p0 = vec3( dot(n_out2p0,vec3(0.333333,0.333333,0.333333)) , dot(n_out32p0,vec3(0.333333,0.333333,0.333333)) , n_in33p2 );

// VectorOp:12
	vec3 n_out12p0;
	n_out12p0 = vec3(n_out27p0) + n_out33p0;

// ScalarUniform:20
	float n_out20p0;
	n_out20p0 = Intensity;

// ScalarOp:31
	float n_in31p1 = 2.00000;
	float n_out31p0;
	n_out31p0 = n_out20p0 * n_in31p1;

// VectorOp:8
	vec3 n_out8p0;
	n_out8p0 = n_out12p0 * vec3(n_out31p0);

// Input:18
	vec3 n_out18p0;
	n_out18p0 = vec3(UV,0.0);

// VectorOp:5
	vec3 n_out5p0;
	n_out5p0 = n_out8p0 + n_out18p0;

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out5p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// ScalarUniform:29
	float n_out29p0;
	n_out29p0 = Color;

// Texture:26
	vec3 n_out26p0;
	float n_out26p1;
	vec4 tex_frg_26_read = texture( tex_frg_26 , vec3(n_out29p0).xy );
	n_out26p0 = tex_frg_26_read.rgb;
	n_out26p1 = tex_frg_26_read.a;

// ColorOp:23
	vec3 n_out23p0;
	n_out23p0=min(n_out6p0,n_out26p0);

// Output:0
	COLOR.rgb = n_out23p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 414.723, 183 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1280, 620 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -220, 240 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -860, 540 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( 620, 600 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( 800, 480 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( 440, 540 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( -1080, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -680, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -440, 340 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 240, 420 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -880, 420 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -660, 420 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( -880, 300 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( 460, 680 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -1080, 420 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( 40, 720 )
nodes/fragment/23/node = SubResource( 11 )
nodes/fragment/23/position = Vector2( 1040, 560 )
nodes/fragment/26/node = SubResource( 12 )
nodes/fragment/26/position = Vector2( 800, 720 )
nodes/fragment/27/node = SubResource( 13 )
nodes/fragment/27/position = Vector2( 40, 420 )
nodes/fragment/29/node = SubResource( 14 )
nodes/fragment/29/position = Vector2( 620, 840 )
nodes/fragment/31/node = SubResource( 15 )
nodes/fragment/31/position = Vector2( 240, 680 )
nodes/fragment/32/node = SubResource( 16 )
nodes/fragment/32/position = Vector2( -220, 460 )
nodes/fragment/33/node = SubResource( 17 )
nodes/fragment/33/position = Vector2( 40, 500 )
nodes/fragment/34/node = SubResource( 18 )
nodes/fragment/34/position = Vector2( -420, 560 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 0, 12, 0, 8, 0, 9, 0, 17, 0, 17, 0, 10, 1, 18, 0, 5, 1, 19, 0, 14, 1, 6, 0, 23, 0, 6, 1, 0, 1, 23, 0, 0, 0, 26, 0, 23, 1, 29, 0, 26, 0, 8, 0, 5, 0, 15, 0, 11, 1, 11, 0, 2, 0, 14, 0, 15, 0, 10, 0, 11, 0, 20, 0, 31, 0, 31, 0, 8, 1, 2, 0, 33, 0, 32, 0, 33, 1, 11, 0, 34, 0, 34, 0, 32, 0, 27, 0, 12, 0, 33, 0, 12, 1, 4, 0, 15, 1 )
